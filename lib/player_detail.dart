import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:provider/provider.dart';
import 'match.dart';
import 'dart:io';

class PlayerDetail extends StatefulWidget {
  final PlayerStats player;

  const PlayerDetail({Key? key, required this.player}) : super(key: key);

  @override
  _PlayerDetailState createState() => _PlayerDetailState();
}

class _PlayerDetailState extends State<PlayerDetail> {
  final _formKey = GlobalKey<FormState>();
  late TextEditingController _nameController;
  File? _image;

  @override
  void initState() {
    super.initState();
    _nameController = TextEditingController(text: widget.player.name);
  }

  //generated by GPT
  Future<void> _pickImage(ImageSource source) async {
    final pickedFile = await ImagePicker().pickImage(source: source);
    if (pickedFile != null) {
      setState(() {
        _image = File(pickedFile.path);
      });
    }
  }

  //generated by GPT
  Future<String?> _uploadImage(File image) async {
    try {
      final storageRef = FirebaseStorage.instance.ref();
      final imagesRef = storageRef.child("flutter_cricket/player_images/${DateTime.now().millisecondsSinceEpoch}.jpg");
      await imagesRef.putFile(image);
      return await imagesRef.getDownloadURL();
    } catch (e) {
      print("Image upload failed: $e");
      return null;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Player Details"),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Form(
            key: _formKey,
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                TextFormField(
                  controller: _nameController,
                  decoration: InputDecoration(labelText: "Name"),
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return 'Please enter a name';
                    }
                    return null;
                  },
                ),
                SizedBox(height: 8),
                Center(
                  child: _image != null
                      ? Center(child: Image.file(_image!, height: 200, width: 200, fit: BoxFit.cover))
                      : widget.player.imageUrl.isNotEmpty
                          ? Center(child: Image.network(widget.player.imageUrl, height: 200, width: 200, fit: BoxFit.cover))
                          : Container(
                              height: 200,
                              width: 200,
                              color: Colors.grey[300],
                              child: Center(child: Icon(Icons.person, size: 100)),
                            ),
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    ElevatedButton.icon(
                      onPressed: () => _pickImage(ImageSource.camera),
                      icon: Icon(Icons.camera),
                      label: Text("Camera"),
                    ),
                    ElevatedButton.icon(
                      onPressed: () => _pickImage(ImageSource.gallery),
                      icon: Icon(Icons.photo_library),
                      label: Text("Gallery"),
                    ),
                  ],
                ),
                SizedBox(height: 8),
                Text("Runs: ${widget.player.runs}", style: TextStyle(fontSize: 18)),
                SizedBox(height: 8),
                Text("Balls Faced: ${widget.player.ballsFaced}", style: TextStyle(fontSize: 18)),
                SizedBox(height: 8),
                Text("Balls Delivered: ${widget.player.ballsDelivered}", style: TextStyle(fontSize: 18)),
                SizedBox(height: 8),
                Text("Runs Lost: ${widget.player.runsLost}", style: TextStyle(fontSize: 18)),
                SizedBox(height: 8),
                Text("Wickets: ${widget.player.wickets}", style: TextStyle(fontSize: 18)),
                SizedBox(height: 8),
                ElevatedButton(
                  onPressed: () async {
                    if (_formKey.currentState?.validate() ?? false) {
                      if (_image != null) {
                        String? imageUrl = await _uploadImage(_image!);
                        if (imageUrl != null) {
                          widget.player.imageUrl = imageUrl;
                        }
                      }
                      widget.player.name = _nameController.text;
                      await Provider.of<MatchModel>(context, listen: false).updatePlayer(widget.player);
                      if (context.mounted) Navigator.pop(context, 'update');
                    }
                  },
                  child: Text("Save"),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
